{
  "version": 3,
  "sources": ["../../../../../apps/futilitap/futilitap/public/js/address_query_filters.js", "../../../../../apps/futilitap/futilitap/public/js/contact_qentry.js"],
  "sourcesContent": ["// Description: Query filters for Address doctype.\n// Author: Ismail Tabtabai\n// Version: 0.0.1\n// Last Update: 2023-12-17\n\nfrappe.provide('frappe.ui.form');\n\nfrappe.ui.form.on('Address', {\n    country: function(frm) {\n        // Reset fields when country is changed.\n        frm.set_value(\"city\", \"\");\n        frm.set_value(\"county\", \"\");\n        frm.set_value(\"state\", \"\");\n        frm.set_value(\"pincode\", \"\");\n\n        // Both City & State fields need to be filtered by Country field\n        function set_common_query(field_name) {\n            frm.set_query(field_name, function() {\n                return {\n                    \"filters\": {\n                        \"country\": frm.doc.country\n                    }\n                };\n            });\n        }\n        // Filter City and Governorate fields based on Country field\n        set_common_query(\"city\");\n        set_common_query(\"county\");\n        set_common_query(\"state\");\n    },\n});", "frappe.provide('frappe.ui.form');\n\nfrappe.ui.form.ContactQEntry = class ContactQEntry extends frappe.ui.form.QuickEntryForm {\n\tconstructor(doctype, after_insert, init_callback, doc, force) {\n\t\tsuper(doctype, after_insert, init_callback, doc, force);\n\t\tthis.skip_redirect_on_error = true;\n\t}\n\n\trender_dialog() {\n\t\tthis.mandatory = this.mandatory.concat(this.get_variant_fields());\n\t\tsuper.render_dialog();\n\t}\n\n\tinsert() {\n\t\t/**\n\t\t * Using alias fieldnames because the doctype definition define \"email_id\" and \"mobile_no\" as readonly fields.\n\t\t * Therefor, resulting in the fields being \"hidden\".\n\t\t */\n\t\tconst map_field_names = {\n\t\t\t\"email_address\": \"email_id\",\n\t\t\t\"mobile_number\": \"mobile_no\",\n\t\t};\n\n\t\tObject.entries(map_field_names).forEach(([fieldname, new_fieldname]) => {\n\t\t\tthis.dialog.doc[new_fieldname] = this.dialog.doc[fieldname];\n\t\t\tdelete this.dialog.doc[fieldname];\n\t\t});\n\n\t\treturn super.insert();\n\t}\n\n\tget_variant_fields() {\n\t\tvar variant_fields = [{\n\t\t\tfieldtype: \"Section Break\",\n\t\t\tlabel: __(\"Primary Contact Details\"),\n\t\t\tcollapsible: 1\n\t\t},\n\t\t{\n\t\t\tlabel: __(\"Email Id\"),\n\t\t\tfieldname: \"email_address\",\n\t\t\tfieldtype: \"Data\",\n\t\t\toptions: \"Email\",\n\t\t},\n\t\t{\n\t\t\tfieldtype: \"Column Break\"\n\t\t},\n\t\t{\n\t\t\tlabel: __(\"Mobile Number\"),\n\t\t\tfieldname: \"mobile_number\",\n\t\t\tfieldtype: \"Data\"\n\t\t},\n\t\t{\n\t\t\tfieldtype: \"Section Break\",\n\t\t\tlabel: __(\"Primary Address Details\"),\n\t\t\tcollapsible: 1\n\t\t},\n\t\t{\n\t\t\tlabel: __(\"Address Line 1\"),\n\t\t\tfieldname: \"address_line1\",\n\t\t\tfieldtype: \"Data\"\n\t\t},\n\t\t{\n\t\t\tlabel: __(\"Address Line 2\"),\n\t\t\tfieldname: \"address_line2\",\n\t\t\tfieldtype: \"Data\"\n\t\t},\n\t\t{\n\t\t\tlabel: __(\"ZIP Code\"),\n\t\t\tfieldname: \"pincode\",\n\t\t\tfieldtype: \"Data\"\n\t\t},\n\t\t{\n\t\t\tfieldtype: \"Column Break\"\n\t\t},\n\t\t{\n\t\t\tlabel: __(\"Country\"),\n\t\t\tfieldname: \"country\",\n\t\t\tfieldtype: \"Link\",\n\t\t\toptions: \"Country\"\n\t\t},\n\t\t{\n\t\t\tlabel: __(\"City\"),\n\t\t\tfieldname: \"city\",\n\t\t\tfieldtype: \"Data\"\n\t\t},\n\t\t{\n\t\t\tlabel: __(\"State\"),\n\t\t\tfieldname: \"state\",\n\t\t\tfieldtype: \"Data\"\n\t\t},\n\t\t{\n\t\t\tlabel: __(\"Customer POS Id\"),\n\t\t\tfieldname: \"customer_pos_id\",\n\t\t\tfieldtype: \"Data\",\n\t\t\thidden: 1\n\t\t}];\n\n\t\treturn variant_fields;\n\t}\n}\n\nfrappe.ui.form.CustomerQuickEntryForm = frappe.ui.form.ContactQEntry;\n\n// frappe.ui.form.CustomerQuickEntryForm = frappe.ui.form.QuickEntryForm.extend({\n//     init: function(doctype, after_insert) {\n//         this.skip_redirect_on_error = true;\n//         this._super(doctype, after_insert);\n//     },\n\n//     render_dialog: function() {\n//         this.mandatory = this.get_field();\n//         this._super();\n//     },\n\n//     get_field: function() {\n//         const variantFields = [\n//             {\n//                 fieldtype: \"Section Break\",\n//                 label: __(\"Primary Contact Details\"),\n//                 collabsible: 1\n//             },\n//             {\n//                 label: __(\"Email Id\"),\n//                 fieldname: \"email_address\",\n//                 fieldtype: \"Data\",\n//                 options: \"Email\"\n//             },\n//             {\n//                 fieldtype: \"Column Break\"\n//             },\n//             {\n//                 label: __(\"Mobile Number\"),\n//                 fieldname: \"mobile_number\",\n//                 fieldtype: \"Data\"\n//             },\n//             {\n//                 fieldtype: \"Section Break\",\n//                 label: __(\"Primary Address Details\"),\n//                 collabsible: 1\n//             },\n//             {\n//                 label: __(\"Address Line 1\"),\n//                 fieldname: \"address_line1\",\n//                 fieldtype: \"Data\"\n//             },\n//             {\n//                 label: __(\"Address Line 2\"),\n//                 fieldname: \"address_line2\",\n//                 fieldtype: \"Data\"\n//             },\n//             {\n//                 label: __(\"PACI\"),\n//                 fieldname: \"pincode\",\n//                 fieldtype: \"Data\"\n//             },\n//             {\n//                 fieldtype: \"Column Break\"\n//             },\n//             {\n//                 label: __(\"City/Town\"),\n//                 fieldname: \"city\",\n//                 fieldtype: \"Link\",\n//                 options: \"FUA City\"\n//             },\n//             {\n//                 label: __(\"Governorate\"),\n//                 fieldname: \"state\",\n//                 fieldtype: \"Link\",\n//                 options: \"FUA Governorate\"\n//             },\n//             {\n//                 label: __(\"Country\"),\n//                 fieldname: \"country\",\n//                 fieldtype: \"Link\",\n//                 options: \"Country\"\n//             },\n//             {\n//                 label: __(\"Customer POS Id\"),\n//                 fieldname: \"customer_pos_id\",\n//                 fieldtype: \"Data\"\n//                 hidden: 1\n//             }\n//         ];\n\n//         return variantFields;\n//     }\n// })"],
  "mappings": "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",
  "names": []
}
